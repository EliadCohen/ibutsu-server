# coding: utf-8
from __future__ import absolute_import

from ibutsu_server import util
from ibutsu_server.models.base_model_ import Model


class Artifact(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, result_id=None, filename=None, additional_metadata=None):
        """Artifact - a model defined in Swagger

        :param id: The id of this Artifact.
        :type id: str
        :param result_id: The result_id of this Artifact.
        :type result_id: str
        :param filename: The filename of this Artifact.
        :type filename: str
        :param additional_metadata: The additional_metadata of this Artifact.
        :type additional_metadata: Dict[str, object]
        """
        self.openapi_types = {
            "id": str,
            "result_id": str,
            "filename": str,
            "additional_metadata": object,
        }

        self.attribute_map = {
            "id": "id",
            "result_id": "resultId",
            "filename": "filename",
            "additional_metadata": "additionalMetadata",
        }

        self._id = id
        self._result_id = result_id
        self._filename = filename
        self._additional_metadata = additional_metadata

    @classmethod
    def from_dict(cls, dikt) -> "Artifact":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Artifact of this Artifact.
        :rtype: Artifact
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Artifact.

        Unique ID of the artifact

        :return: The id of this Artifact.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Artifact.

        Unique ID of the artifact

        :param id: The id of this Artifact.
        :type id: str
        """

        self._id = id

    @property
    def result_id(self):
        """Gets the result_id of this Artifact.

        ID of test result to attach artifact to

        :return: The result_id of this Artifact.
        :rtype: str
        """
        return self._result_id

    @result_id.setter
    def result_id(self, result_id):
        """Sets the result_id of this Artifact.

        ID of test result to attach artifact to

        :param result_id: The result_id of this Artifact.
        :type result_id: str
        """

        self._result_id = result_id

    @property
    def filename(self):
        """Gets the filename of this Artifact.

        ID of pet to update

        :return: The filename of this Artifact.
        :rtype: str
        """
        return self._filename

    @filename.setter
    def filename(self, filename):
        """Sets the filename of this Artifact.

        ID of pet to update

        :param filename: The filename of this Artifact.
        :type filename: str
        """

        self._filename = filename

    @property
    def additional_metadata(self):
        """Gets the additional_metadata of this Artifact.

        Additional data to pass to server

        :return: The additional_metadata of this Artifact.
        :rtype: object
        """
        return self._additional_metadata

    @additional_metadata.setter
    def additional_metadata(self, additional_metadata):
        """Sets the additional_metadata of this Artifact.

        Additional data to pass to server

        :param additional_metadata: The additional_metadata of this Artifact.
        :type additional_metadata: object
        """

        self._additional_metadata = additional_metadata
