# ===============================================
# Database Backup Cronjob
# To add this to your project run:
#   oc process -f pgsql-backup-cronjob.yaml | oc create -f -
# ===============================================
kind: Template
apiVersion: v1
metadata:
  name: pgsql-backup-template
parameters:
  - name: NAMESPACE
    displayName: Namespace
    description: The namespace for all of the images, applications, etc.
    value: iqe-ibutsu-server
  - name: BACKUP_VOLUME_CLAIM
    displayName: Backup volume claim
    value: database-backup
  - name: BACKUP_KEEP
    displayName: Number of backups to keep
    value: '5'
  - name: BACKUP_SCHEDULE
    displayName: Cron-like schedule to run backup
    value: '1 0 * * 6'
objects:
- kind: CronJob
  apiVersion: batch/v1beta1
  metadata:
    name: database-backup
    namespace: ${NAMESPACE}
  spec:
    schedule: ${BACKUP_SCHEDULE}
    concurrencyPolicy: Forbid
    jobTemplate:
      spec:
        template:
          spec:
            volumes:
              - name: database-backups
                persistentVolumeClaim:
                  claimName: ${BACKUP_VOLUME_CLAIM}
            containers:
              - name: postgresql-backup
                image: postgresql:12
                command:
                  - 'bash'
                  - '-eo'
                  - 'pipefail'
                  - '-c'
                  - >
                    trap "echo 'Backup failed'; exit 0" ERR;
                    FILENAME=backup-${PGDATABASE}-`date +%Y-%m-%d`.dump;
                    cd /var/lib/database-backup;
                    find . -type f -name "backup-${PGDATABASE}-*" -exec ls -ltr "{}" + | head -n -${BACKUP_KEEP} | xargs rm -fr;
                    echo "Backing up database...";
                    PGPASSWORD="$PGPASSWORD" pg_dump -v --username=$PGUSER --host=$PGHOST --port=$PGPORT --dbname=$PGDATABASE --exclude-table=artifacts --format=custom --compress=9 --jobs=1 --no-owner --file=$FILENAME;
                    echo "";
                    echo -n "Backup successful: "; du -h ./$FILENAME;
                    echo "To restore, use:";
                    echo "~# pg_restore --user=$PGUSER --password=<PGPASSWD> --host=$PGHOST --port=$PGPORT --database=$PGDATABASE $FILENAME"
                resources:
                limits:
                  cpu: 250m
                  memory: 1Gi
                requests:
                  cpu: 100m
                  memory: 512Mi
                env:
                  - name: PGHOST
                    value: postgresql.${NAMESPACE}.svc
                  - name: PGPORT
                    value: "5432"
                  - name: PGUSER
                    valueFrom:
                      secretKeyRef:
                        key: database-user
                        name: postgresql
                  - name: PGPASSWORD
                    valueFrom:
                      secretKeyRef:
                        key: database-password
                        name: postgresql
                  - name: PGDATABASE
                    valueFrom:
                      secretKeyRef:
                        key: database-name
                        name: postgresql
                  - name: BACKUP_KEEP
                    value: ${BACKUP_KEEP}
                volumeMounts:
                  - name: database-backups
                    mountPath: /var/lib/database-backup
            restartPolicy: Never
