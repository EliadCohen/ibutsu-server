# ===============================================
# Database Vacuum Cronjob
# This provides a cron-based vacuum of the
# entire DB
# To add this to your project run:
#   oc create -f pgsql-vacuum-cronjob.yaml
# ===============================================
kind: Template
apiVersion: v1
metadata:
  name: pgsql-vacuum-template
parameters:
  - name: NAMESPACE
    displayName: Namespace
    description: The namespace for all of the images, applications, etc.
    value: iqe-ibutsu-server
  - name: VACUUM_SCHEDULE
    displayName: Cron-like schedule to run vacuum
    value: '1 1 * * *'
objects:
- kind: CronJob
  apiVersion: batch/v1beta1
  metadata:
    name: database-vacuum
    namespace: ${NAMESPACE}
  spec:
    schedule: ${VACUUM_SCHEDULE}
    concurrencyPolicy: Forbid
    jobTemplate:
      spec:
        template:
          spec:
            containers:
              - name: postgresql-vacuum
                image: >-
                  image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:fd6a31238840a009aa024a88a1dc95cc6e61067650cad2fad0db4f52c9265496
                command:
                  - 'bash'
                  - '-eo'
                  - 'pipefail'
                  - '-c'
                  - >
                    trap "echo 'VACUUM failed'; exit 0" ERR;
                    echo "Backing up database...";
                    PGPASSWORD="$PGPASSWORD" psql --username=$PGUSER --host=$PGHOST --port=$PGPORT --dbname=$PGDATABASE --command 'VACUUM (verbose);';
                    echo "";
                    echo -n "VACUUM successful."
                resources:
                limits:
                  cpu: 250m
                  memory: 1Gi
                requests:
                  cpu: 100m
                  memory: 512Mi
                env:
                  - name: PGHOST
                    value: postgresql.${NAMESPACE}.svc
                  - name: PGPORT
                    value: "5432"
                  - name: PGUSER
                    valueFrom:
                      secretKeyRef:
                        key: database-user
                        name: postgresql
                  - name: PGPASSWORD
                    valueFrom:
                      secretKeyRef:
                        key: database-password
                        name: postgresql
                  - name: PGDATABASE
                    valueFrom:
                      secretKeyRef:
                        key: database-name
                        name: postgresql
            restartPolicy: Never
